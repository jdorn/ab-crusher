openapi: 3.0.0
info:
  title: AB Crusher API
  version: 0.0.1
servers:
  - url: /api/v1
paths:
  /tests:
    get:
      summary: Returns a list of current and past tests
      responses:
        '200':    # status code
          description: A JSON array of TestSummary objects
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/TestSummary'
    post:
      summary: Create a new Test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
  /test/{testId}:
    get:
      summary: Return data for a single Test
      parameters:
        - in: path
          name: testId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: A single Test object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
    put:
      summary: Update a Test
      parameters:
        - in: path
          name: testId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Test'
      responses:
        '200':
          description: A single Test object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
    delete:
      summary: Delete a Test
      parameters:
        - in: path
          name: testId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Deleted
  
  /test/{testId}/snapshots:
    get:
      summary: Return data snapshots for a test
      parameters:
        - in: path
          name: testId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: An array of data snapshots
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Snapshot'
    post:
      summary: Create a new snapshot for a test
      parameters:
        - in: path
          name: testId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: The snapshot created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Snapshot'
  /events:
    get:
      summary: Get a list of events
      responses:
        '200':
          description: An array of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
components:
  schemas:
    Event:
      type: object
      properties:
        timestamp:
          type: string
        user:
          type: string
        event:
          type: string
        objectId:
          type: string
        data:
          type: object
    Snapshot:
      type: object
      properties:
        id:
          type: string
        testId:
          type: string
        created:
          type: string
        variations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              samples:
                type: int
              metrics:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    value:
                      type: float
                    rawData:
                      type: object
                    chanceToBeatBaseline:
                      type: float
                    enoughData:
                      type: boolean
                    confidenceLow:
                      type: float
                    confidenceHigh:
                      type: float
    TestStatus:
      type: string
      enum:
        - DRAFT
        - PENDING
        - RUNNING
        - STOPPED
    Metric:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - BINOMIAL
            - COUNT
            - NPS
    Variation:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        weight:
          type: float
        active:
          type: boolean
        images:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              width:
                type: int
              height:
                type: int
    TestSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/TestStatus'
        description:
          type: string
        hypothesis:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        started_at:
          type: string
        stopped_at:
          type: string
    Test:
      type: object
      properties:
        id: 
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/TestStatus'
        description:
          type: string
        hypothesis:
          type: string
        variations:
          type: array
          items: 
            $ref: '#/components/schemas/Variation'
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/Metric'
        results:
          type: object
          properties:
            summary:
              type: string
            analysis:
              type: string
            learnings:
              - type: string
            outcome:
              type: string
              enum:
                - WIN
                - LOSS
                - DRAW
                - DNF
            future_baseline:
              type: string
        created_at:
          type: string
        updated_at:
          type: string
        started_at:
          type: string
        stopped_at:
          type: string
